<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awethumb.repository.dao.ChatDAO">

<resultMap type="Message" id="messageMap">
	<id property="chatroomNo" column="chatroom_no" />
	<result property="messageNo" column="message_no" />
	<result property="chatroomNo" column="chatroom_no" />
	<result property="sendUser" column="send_user" />
	<result property="takeUser" column="take_user" />
	<result property="sendDate" column="send_date" />
	<result property="sendTime" column="send_time" />
	<result property="readTime" column="read_time" />
	<result property="messageContent" column="message_content" />
</resultMap>

<resultMap type="UserVO" id="userMap">
	<result property="userNo" column="user_no" />
	<result property="userId" column="user_id" />
	<result property="userName" column="user_name" />
	<result property="userPass" column="user_pass" />
	<result property="userNickname" column="user_nickname" />
	<result property="categoryList" column="category_list" />
	<result property="userEmailKey" column="user_email_key" />
	<association property="userImgPath" select="selectUserImgPath" column="user_no" />
</resultMap>

<resultMap type="Chatroom" id="chatroomMap">
	<result property="chatroomNo" column="chatroom_no" />
	<result property="unReadCnt" column="un_read_cnt" />
	<result property="sendUser" column="send_user" />
	<association property="user" select="selectSendUser" column="{chatroomNo=chatroom_no, sendUser=send_user}"/>
	<collection property="messageList" select="selectAllMessage" column="{chatroomNo=chatroom_no, sendUser=send_user}"/>
</resultMap>	


<!-- 방 존재 여부 조회 -->
<select id="isRoom" resultType="int" parameterType="Message" flushCache="true" useCache="true">
	SELECT COUNT(message_no) 
	  FROM message_tb
	 WHERE (send_user = #{sendUser} AND take_user = #{takeUser})
	    OR (send_user = #{takeUser} AND take_user = #{sendUser}) 
</select>

<!-- 방 조회 -->
<select id="selectRoom" resultType="int" parameterType="Message" flushCache="true" useCache="true">
	SELECT DISTINCT chatroom_no
	  FROM message_tb
	 WHERE (send_user = #{sendUser} AND take_user = #{takeUser})
	    OR (send_user = #{takeUser} AND take_user = #{sendUser}) 
</select>

 <!-- 유저 당 개설된 방 조회 -->
<select id="selectAllChatRoom" resultMap="chatroomMap" parameterType="int" flushCache="true" useCache="true">
	SELECT DISTINCT c.*, (select user_no from user_tb where user_no = #{sendUser}) as send_user,					 
					 (SELECT COUNT(*)
					   FROM message_tb
					  WHERE read_time is null
					    AND chatroom_no = c.chatroom_no
					    AND take_user = #{sendUser}) as un_read_cnt
					 
	  FROM chatroom_tb c
	 INNER JOIN message_tb m
	 	ON c.chatroom_no = m.chatroom_no	
	 WHERE m.send_user = #{sendUser}
	    OR m.take_user = #{sendUser} 
</select>
 
<select id="selectSendUser" resultMap="userMap" parameterType="Message" flushCache="true" useCache="true">

	 SELECT DISTINCT u.* FROM user_tb u
      INNER JOIN message_tb m
         ON u.user_no = m.send_user 
      WHERE u.user_no != #{sendUser} AND chatroom_no = #{chatroomNo}
      UNION
     SELECT DISTINCT us.* FROM user_tb us		
      INNER JOIN message_tb m
         ON us.user_no = m.take_user
	  WHERE us.user_no != #{sendUser} AND chatroom_no = #{chatroomNo}
	  
</select> 
 
 <!-- 유저 당 메세지 조회 -->
<select id="selectAllMessage" resultMap="messageMap" parameterType="Message" flushCache="true" useCache="true">
	SELECT * 
	  FROM (
				SELECT message_no, chatroom_no, send_user, take_user, 
				       DATE_FORMAT(send_time, '%Y년 %m월 %d일') AS send_date,
				       CONCAT(
							       case DATE_FORMAT(send_time, '%p') when 'AM' then '오전 '
							       else '오후 '
							       end
							       ,
							       DATE_FORMAT(send_time, '%h:%i')
							 ) AS send_time,
				       read_time, message_content
				  FROM message_tb
				 WHERE chatroom_no = #{chatroomNo}   
				 ORDER BY message_no desc
				 <if test="page == null">
				 LIMIT 0, 10
				 </if>
				 <if test="page != null">
				 LIMIT #{page.pageIndex}, #{page.pageCount}
				 </if>
		   ) m
	 ORDER BY m.message_no
</select>


<!-- 방 생성 -->
<insert id="createRoom" useGeneratedKeys="true" keyProperty="chatroomNo" parameterType="Chatroom">
	INSERT INTO chatroom_tb
	VALUES ()
</insert>
<!-- 채팅 내용 등록 -->
<insert id="insertMessage" parameterType="Message">
	INSERT INTO message_tb (chatroom_no, send_user, take_user, message_content)
	VALUES (#{chatroomNo}, #{sendUser}, #{takeUser}, #{messageContent})
</insert>
<!-- 읽은 시간 -->
<update id="readMessageTime" parameterType="Message">
	UPDATE message_tb
	   SET read_time = NOW()
	 WHERE take_user = #{takeUser}
	   AND chatroom_no = #{chatroomNo}
</update>

<!-- 닉네임 조회 -->
<select id="searchNickname" parameterType="SearchUser" resultType="UserVO">
	SELECT u.user_no, user_nickname,
					IFNULL( 
							CONCAT(
									substring(user_file_path,LENGTH('/var/java/upload/') + 1, 
				                    		  LENGTH(
				                    		  			(SELECT user_file_path FROM user_file_tb
														WHERE user_no = u.user_no)
													)
											  ), user_file_sys_name
								  )
						 , 'profile/default-profile-picture.png'
						  ) as user_img_path
	  FROM user_tb u
	  LEFT OUTER JOIN user_file_tb f
	    ON u.user_no = f.user_no  
	 WHERE user_nickname like CONCAT(#{searchWord}, '%')
	 <if test="existUser.size != 0">
	   AND u.user_no NOT IN 
	   <foreach collection="existUser" item="user"  open="(" close=")" separator=",">
	   		#{user}
	   </foreach>
	 </if>  
	 LIMIT 10
</select>

<!-- 처음 사용자에게 메세지 왔을 때 -->
<select id="selectNickname" parameterType="int" resultType="string">
	SELECT user_nickname
	  FROM user_tb
	 WHERE user_no = #{userNo}
</select>

<select id="selectUserImgPath" parameterType="int" resultType="string">
	SELECT IFNULL( 
							CONCAT(
									substring(user_file_path,LENGTH('/var/java/upload/') + 1, 
				                    		  LENGTH(
				                    		  			(SELECT user_file_path FROM user_file_tb
														WHERE user_no = #{userNo})
													)
											  ), user_file_sys_name
								  )
					, 'profile/default-profile-picture.png'
				  ) as user_file_path 
	  FROM user_file_tb
     RIGHT OUTER JOIN (SELECT '') as d
		ON user_no = #{userNo}
</select>

</mapper>



