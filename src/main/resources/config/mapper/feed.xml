<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awethumb.repository.dao.FeedDAO">
	<resultMap id="FeedMap" type="FeedBoard">
		<result column="post_no" property="postNo" /> 
		<result column="project_no" property="projectNo" /> 
		<result column="user_no" property="userNo" /> 
		<result column="post_content" property="postContent" /> 
		<result column="post_public_enabled" property="postPublicEnabled" /> 
		<result column="hashtag_no" property="hashtagNo" /> 
		<result column="user_nickname" property="userNickName" /> 
		<collection property="commentList" select="selectFeedBoardComment" column="post_no"/>
	</resultMap>
	<resultMap id="commentMap" type="Comment">
		<result column="cmt_user_nickname" property="cmtUserNickname" /> 
		<result column="cmt_no" property="cmtNo" /> 
		<result column="cmt_content" property="cmtContent" /> 
		<result column="cmt_reg_dt" property="cmtRegDt" />
		<result column="user_no" property="userNo" />
		<result column="post_no" property="postNo" />
		<result column="ago_reg_dt" property="agoRegDt" />
	</resultMap>
	
	<select id="selectFeedBoardPage" parameterType="FeedPage" resultMap="FeedMap">
		SELECT ut.user_nickname,
			   ut.user_no,	
			   bt.post_no,
		       bt.post_content,
			   bt.view_cnt,
			   bt.project_no
		  FROM board_tb bt 
		 INNER JOIN project_tb pt
		    ON bt.project_no= pt.project_no 
		 INNER JOIN user_tb ut 
		    ON ut.user_no = pt.user_no 
		 WHERE ut.user_no = any (SELECT opp_user_no
								   FROM subscribe_tb
								  WHERE sub_user_no = #{subUserNo}) 
		 ORDER BY reg_date desc
		 LIMIT #{pageIndex} , #{pageCount}
	</select>
	
	
	<select id="selectFeedBoardComment" parameterType="int" resultMap="commentMap">
		 SELECT ct.*,
				ut.user_nickname as cmt_user_nickname
		   from comment_tb ct
		  INNER JOIN user_tb ut
		     ON ct.user_no = ut.user_no 
		  where post_no = #{postNo}
		  order by cmt_reg_dt
	</select>
	
	<select id="selectOneComment" parameterType="int" resultType="Comment">
 		 SELECT ct.*,
		        ut.user_nickname as cmtUserNickname
		   from comment_tb ct
		  INNER JOIN user_tb ut
		     ON ct.user_no = ut.user_no 
		  where cmt_no = #{cmtNo}
	</select>
	
	<select id="selectCmtNo" parameterType="int" resultType="int">
		SELECT cmt_no
		  FROM comment_tb
		 WHERE post_no = #{postNo} 
	</select>
	
	<select id="commentTime" parameterType="int" resultType="int">
		SELECT TIMESTAMPDIFF(
				minute,
				 (select cmt_reg_dt
				    FROM comment_tb
				   WHERE cmt_no = ${cmtNo}),
				   NOW()
				)
	</select>
	
	<insert id="insertBoardComment" parameterType="Comment" >
		INSERT INTO comment_tb (
		cmt_content, user_no, post_no
		)values( 
		#{cmtContent}, #{userNo}, #{postNo}
		)
		<selectKey resultType="int" keyProperty="cmtNo" order="AFTER">
        	select last_insert_id()
    	</selectKey>  
	</insert>
	
	<delete id="deleteBoardComment" parameterType="int">
		DELETE 
		  FROM comment_tb
		 WHERE cmt_no = #{cmtNo}
	</delete>
	
	<update id="updateBoardComment" parameterType="Comment">
		UPDATE comment_tb
		   SET cmt_content = #{cmtContent}
		 WHERE cmt_no = #{cmtNo}
	</update>
	
	<select id="selectUserCategoryList" resultType="CategoryList" parameterType="string">
		SELECT user_no,
			   user_nickname,
			   category_list
		  FROM user_tb
		 WHERE user_no = any(SELECT user_no
							   FROM user_tb
							  WHERE user_no = any(SELECT distinct st.opp_user_no
												    FROM subscribe_tb st
												   INNER JOIN user_tb ut
												      ON st.sub_user_no = ut.user_no 
												   WHERE ut.user_no = any(SELECT st.opp_user_no
																		    FROM subscribe_tb st
																		   INNER JOIN user_tb ut
																		      ON st.sub_user_no = ut.user_no 
																		   WHERE ut.user_id = #{userId}) 
												  ORDER BY st.opp_user_no ) 
							   AND user_id != #{userId})
		 ORDER BY rand()
		 limit 0, 30
	</select>
	
	
	<select id="selectLoginUserCategory" parameterType="string" resultType="CategoryList">
		select category_list
		  from user_tb
		 where user_id = #{userId}
	</select>
	
	<select id="selectCategoryTitle" parameterType="int" resultType="String">
		select category_title
		  from category_tb
		 where category_no = #{categoryNo}
	</select>
	

	<select id="selectFollowMe" parameterType="FollowMeUser" resultType="FollowMeUser">
		SELECT user_no,
			   user_nickname
		  FROM user_tb
		 WHERE user_no = any (SELECT a.user_no
							    FROM ( SELECT sub_user_no AS user_no
									     FROM subscribe_tb
									    WHERE opp_user_no = (SELECT user_no
															   FROM user_tb 
															  WHERE user_id = #{userId}) ) AS a
	      LEFT JOIN (SELECT user_no
				      FROM user_tb
				     WHERE user_no = any (SELECT opp_user_no
									        FROM subscribe_tb
									       WHERE sub_user_no = (SELECT user_no
															      FROM user_tb 
														         WHERE user_id = #{userId}) ) )	AS b
	       ON a.user_no = b.user_no
	    WHERE b.user_no IS NULL )
	    LIMIT #{sidePageIndex} , #{sidePageCount}																   
	</select>

	<select id="selectFollowMeCount" parameterType="String" resultType="int">
		SELECT COUNT(user_no)
		  FROM user_tb
		 WHERE user_no = any (SELECT a.user_no
					    		FROM (   SELECT sub_user_no AS user_no
									       FROM subscribe_tb
									      WHERE opp_user_no = (SELECT user_no
															     FROM user_tb 
															    WHERE user_id =  #{userId}) ) AS a
	      LEFT JOIN (SELECT user_no
					      FROM user_tb
					     WHERE user_no = any (SELECT opp_user_no
										        FROM subscribe_tb
										       WHERE sub_user_no = (SELECT user_no
																      FROM user_tb 
															         WHERE user_id =  #{userId}) ) )	AS b
	       ON a.user_no = b.user_no
	    WHERE b.user_no IS NULL )
	</select>

	<insert id="insertLike" parameterType="Like">
		INSERT INTO like_tb (post_and_cmt_no, user_no, code_value)
		VALUES (#{postAndCmtNo}, #{userNo}, #{codeValue})
	</insert>
	
	<delete id="deleteLike" parameterType="Like">
		DELETE  
		  from like_tb
 	     WHERE post_and_cmt_no = #{postAndCmtNo}
		   and user_no = #{userNo}
		   and code_value = #{codeValue}
	</delete>

	<select id="likeCheck" parameterType="Like" resultType="int">
		SELECT COUNT(*)
		  FROM like_tb
		 WHERE post_and_cmt_no = #{postAndCmtNo}
		   and user_no = #{userNo}
		   and code_value = #{codeValue}
	</select>
	
	<select id="likeCount" parameterType="Like" resultType="int">
			SELECT COUNT(*)
			  FROM like_tb
			 WHERE post_and_cmt_no = #{postAndCmtNo}
	</select>

	<select id="boardFile" parameterType="int" resultType="BoardFile">
		  SELECT * 
		    FROM board_file_tb
		   WHERE post_no = #{postNo}
	</select>

	<select id="boardFileCheck" parameterType="int" resultType="int">
	  SELECT COUNT(*)
	    FROM board_file_tb
	   WHERE post_no = #{postNo} 
	</select>

	<select id="lastCmtNo" resultType="int">
		select LAST_INSERT_ID()
	</select>
	
	<select id="boardImgState" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM board_file_tb
		 WHERE post_no = #{postNo}
	</select>
	
	
</mapper>




