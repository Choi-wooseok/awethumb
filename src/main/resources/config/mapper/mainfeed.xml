<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awethumb.repository.dao.MainFeedDAO">
	<resultMap id="mainFeedMap" type="MainFeed">
		<id property="postNo" column="post_no"/>
		<result column="post_no" property="postNo" /> 
		<result column="project_no" property="projectNo" /> 
		<result column="post_content" property="postContent" /> 
		<result column="x_coord" property="xCoord" /> 
		<result column="y_coord" property="yCoord" /> 
		<result column="width" property="width" /> 
		<result column="hight" property="hight" /> 
		<result column="post_public_enabled" property="postPublicEnabled" /> 
		<result column="hashtag_no" property="hashtagNo" /> 
		<result column="user_no" property="userNo" /> 
		<result column="user_nickname" property="userNickname" /> 
		<result column="hashtag_content" property="hashtagContent" /> 
		<result column="comment_count" property="commentCount" /> 
		<result column="like_count" property="likeCount" /> 
		<result column="search_word" property="searchWord" /> 
		<result column="result_type" property="resultType" /> 
		<collection property="commentList" select="selectComment" column="post_no"/>
		<collection property="hashtagList" select="selectHashtagList" column="post_no"/>
	</resultMap>
	<resultMap id="commentMap" type="Comment">
		<result column="cmt_user_nickname" property="cmtUserNickname" /> 
		<result column="cmt_no" property="cmtNo" /> 
		<result column="cmt_content" property="cmtContent" /> 
		<result column="cmt_reg_dt" property="cmtRegDt" />
		<result column="user_no" property="userNo" />
		<result column="post_no" property="postNo" />
		<result column="ago_reg_dt" property="agoRegDt" />
		<collection property="hashtag" select="selectHashtagList" column="post_no"/>
	</resultMap>
	<resultMap id="hashtagMap" type="Hashtag">
		<result column="hashtag_content" property="hashtagContent" />
		<result column="post_no" property="postNo" />
		<result column="hash_type" property="hashType" />
	</resultMap>
	<resultMap id="searchMap" type="Search">
		<result column="hashtag_count_and_user_no" property="hashtagCountAndUserNo"/>
		<result column="hashtag_and_nickname" property="hashtagAndNickname"/>
		<result column="result_type" property="resultType"/>
		<result column="search_word" property="searchWord"/>
	</resultMap>
	<!-- 검색 ======================================================== -->
	<select id="search" resultType="Search" flushCache="true" useCache="true">
		select u.user_no as hashtag_count_and_user_no, u.user_nickname as hashtag_and_nickname, 'u' as "result_type" 
  		  from user_tb u
 		 where u.user_nickname like CONCAT(#{searchWord},'%')
  		 union all
		select count(distinct h.post_no) , h.hashtag_content, 'h' 
  		  from hashtag_tb h
 		 group by h.hashtag_content
		having h.hashtag_content like CONCAT(#{searchWord},'%')
	</select>
	<!-- 해시태그 ==================================================== -->
	<select id="selectHashtagList" parameterType="int" resultMap="hashtagMap" flushCache="true" useCache="true">
		select post_no, hashtag_content
		  from hashtag_tb 
		 where post_no = #{postNo}
		   and hash_type = #{hashType}
		   <if test="searchWord != null">
		 	   or hashtag_content like #{searchWord} || '%'
		   </if>
	</select>
	<insert id="insertHashtag" parameterType="Comment">
			insert into hashtag_tb(
			post_no, 
			hashtag_content,
			hash_type
			) values 
			<foreach collection="hashtag" item="hash" separator="," >
			(
				#{postNo}, 
				#{hash.hashtagContent},
				2	<!-- 1은 게시물 해시태그 / 2는 댓글 해시태그 -->
			)
			</foreach>
	</insert>
	<!-- 피드 ======================================================= -->
	<select id="selectMainFeed" parameterType="FeedPage" resultMap="mainFeedMap" flushCache="true" useCache="true">
	<!-- like_tb의 code_value는 1일 경우 게시글, 2일 경우 댓글을 뜻함 -->
		select b.*, u.*, p.project_no,
			(select count(c.cmt_no)
		   	   from comment_tb c
		  	  where c.post_no = b.post_no
			) as comment_count, 
			(select count(l.post_and_cmt_no)
			   from like_tb l
		  	  where code_value = 1
			 	and b.post_no = l.post_and_cmt_no) as like_count
		  from board_tb b
		 inner join project_tb p
		    on b.project_no = p.project_no
		 inner join user_tb u
		    on u.user_no = p.user_no
		    <if test="searchWord != null">
		 where exists (select post_no 
								   from hashtag_tb 
								  where hashtag_content like CONCAT(#{searchWord}, '%')
								    and b.post_no = post_no)		
		    </if>
     	   <if test="searchWord != null">
		       or u.user_nickname like concat(#{searchWord}, '%')
     	   </if>
		 order by b.post_no desc
		 limit #{pageIndex} , #{pageCount} 
	</select>
	<select id="selectOneMainFeed" parameterType="int" resultMap="mainFeedMap" flushCache="true" useCache="true">
		select b.*, u.*
		  from board_tb b
		 inner join project_tb p
		 	on b.project_no = p.project_no
		 inner join user_tb u
		 	on p.user_no = u.user_no
		 where b.post_no = #{postNo}
	</select>
<!-- 	<update id="updateViewCnt" parameterType="int"> -->
<!-- 		update board_tb  -->
<!-- 		   set view_cnt = view_cnt + 1 -->
<!-- 		 where no = #{no} -->
<!-- 	</update> -->
	
 	<!-- 댓글 파트 ============================================= --> 
	<select id="selectComment" parameterType="int" resultMap="commentMap" flushCache="true" useCache="true">
	    select c.*, 
	    	(select time_ago_func(cmt_reg_dt, NOW())
			   from comment_tb
			  where cmt_no = c.cmt_no) as ago_reg_dt,
			 (select u.user_nickname
			   from user_tb u
			  where u.user_no = c.user_no) as cmt_user_nickname
	      from comment_tb c
	     where post_no = #{postNo}
	     order by cmt_no 
	</select>	
	<select id="commentCount" parameterType="int" resultType="int" flushCache="true" useCache="true">
		select count(*)
		  from comment_tb
		 where post_no = #{postNo}
	</select>
	<insert id="insertComment" parameterType="Comment">
		insert into comment_tb(
			cmt_content, user_no, post_no
		) values (
			#{cmtContent}, #{userNo}, #{postNo}
		)
	</insert>
	<update id="updateComment" parameterType="comment">
	    update comment_tb
	       set cmt_content = #{cmtContent}
	     where cmt_no = #{cmtNo}
	</update>
	<delete id="deleteComment" parameterType="int">
	    delete 
	      from comment_tb
	     where cmt_no = #{cmtNo}
	</delete>	
</mapper>






















