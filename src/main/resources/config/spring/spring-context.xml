<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<context:component-scan base-package="com.awethumb" />
    
    <!-- mvc 관련 객체 등록 작업 진행 : @RequestMapping 등의 어노테이션 처리 -->
    <mvc:annotation-driven>
    	<!-- ajax text converting -->
    	<mvc:message-converters>
	    	<bean class= "org.springframework.http.converter.StringHttpMessageConverter">
	    		<property name="supportedMediaTypes">
	    			<list>
	    				<value>text/html; charset=UTF-8</value>
	    			</list>
	    		</property>
	    	</bean> 
    	</mvc:message-converters>
    </mvc:annotation-driven>
    
   <!-- WEB의 정적 파일등의 페이지 처리 위해 사용  -->
   <mvc:default-servlet-handler />
    <mvc:resources location="/WEB-INF/resources/css/" mapping="/css/**" />
    <mvc:resources location="/WEB-INF/resources/js/" mapping="/js/**" />
    <mvc:resources location="/WEB-INF/resources/images/" mapping="/images/**" />
    <mvc:resources location="/WEB-INF/resources/admin/" mapping="/admin/**" />
    <mvc:resources location="file:///C:/java/upload/" mapping="/image/**" />
    <!-- 인증처리 인터셉터 -->
<!--     <mvc:interceptors> -->
<!--     	<mvc:interceptor> -->
<!--     		<mvc:mapping path="/mvc/09interceptor/**"/> -->
<!--     		<mvc:exclude-mapping path="/mvc/09interceptor/login*.do"/> -->
<!--     		<bean class="kr.co.mlec.mvc._09interceptor.AuthInterceptor" /> -->
<!--     	</mvc:interceptor> -->
<!--     </mvc:interceptors> -->
                           
    <!-- jsp 페이지로 이동 시 참고 -->
    <mvc:view-resolvers>
    	<mvc:jsp prefix="/WEB-INF/views/" suffix=".jsp"/>
    </mvc:view-resolvers>                      
    
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="25165824" />
    </bean> 
    
    <!-- 이메일 -->
    <bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" /><!-- 465 or 25 -->
		<property name="username" value="moviereservationteam7@gmail.com" />
		<property name="password" value="movieReservation" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
		
	<!-- naver oauth 2.0 bean 생성 -->
	<bean id="naverClientID" class="java.lang.String">
		<constructor-arg value="25pV6h4JhL_YaB38bjb_" />
	</bean>
	
	<bean id="naverClientSecret" class="java.lang.String">
		<constructor-arg value="uNyaS2SIZa" />
	</bean>
	
	<bean id="naverRedirectUrl" class="java.lang.String">
		<constructor-arg value="http://211.207.168.237:8000/awethumb/user/naver/callback.do" />
	</bean>
	
	<bean id="naverSns" class="com.awethumb.auth.SnsValue">
		<constructor-arg value="naver" />
		<constructor-arg ref="naverClientID" />
		<constructor-arg ref="naverClientSecret" />
		<constructor-arg ref="naverRedirectUrl" />
	</bean>
	
	<!-- naver oauth 2.0 설정 끝  -->
	
	<!-- google oauth 2.0 bean 생성 -->
	<bean id="googleClientID" class="java.lang.String">
		<constructor-arg value="283257765643-44gvd1uljtqqgklcsnpvutvddeent5d7.apps.googleusercontent.com" />
	</bean>
	
	<bean id="googleClientSecret" class="java.lang.String">
		<constructor-arg value="-Lfzt74gk0Yw5cbTuv8aeZQm" />
	</bean>
	
	<bean id="googleRedirectUrl" class="java.lang.String">
		<constructor-arg value="http://localhost:8000/awethumb/user/google/callback.do" />
	</bean>
	
	<bean id="googleSns" class="com.awethumb.auth.SnsValue">
		<constructor-arg value="google" />
		<constructor-arg ref="googleClientID" />
		<constructor-arg ref="googleClientSecret" />
		<constructor-arg ref="googleRedirectUrl" />
	</bean>
	
	<bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<constructor-arg ref="googleClientID" />
		<constructor-arg ref="googleClientSecret" />
	</bean>
	
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<property name="redirectUri" ref="googleRedirectUrl" />
		
	</bean>
	
	<!-- google oauth 2.0 설정 끝  -->
	
	<!-- 모든 페이지 캐시 삭제 -->
	<mvc:interceptors>
	    <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
	        <property name="cacheSeconds" value="0" />
	        <property name="useExpiresHeader" value="true" />
	        <property name="useCacheControlHeader" value="true" />
	        <property name="useCacheControlNoStore" value="true" />
	    </bean>
	</mvc:interceptors>


    
</beans>



